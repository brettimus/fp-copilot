{
  role: 'assistant',
  content: null,
  tool_calls: [
    {
      id: 'call_tVgp0MhvHDPJU8Fxm6FteBau',
      type: 'function',
      function: {
        name: 'extract_useful_queries',
        arguments: `{"prompts": ["The SLO for the animalbuttons API has been eating through its latency budget. This is due to a spike in slowness.", "We start with the graph of all functions included in the SLO.", "histogram_quantile( 0.99, sum by (le, function, module, version, service_name) ( rate({ __name__=~\\"function_calls_duration(_seconds)?_bucket\\", objective_name=\\"Animal API SLO for Super Low Latency\\", }[15m]) * on (instance, job) group_left(version) ( last_over_time(build_info[5s]) or on (instance, job) up ))) )", "Here we see a spike in the latency for the snail function...", "This is the likely culprit of all evil. Let's spin up a PR to fix it.", "The snail is being a snail. @Brett Beutell will need to address this."]}`
      }
    }
  ]
}

{
  role: 'assistant',
  content: null,
  tool_calls: [
    {
      id: 'call_kvcidklWkpw5ZrE20NoiKpZc',
      type: 'function',
      function: {
        name: 'extract_useful_queries',
        arguments: '{"queries":["histogram_quantile(\\n++0.99,\\n++sum+by+(le,+function,+module,+version,+service_name)+(\\n++++rate({\\n++++++__name__=~\\"function_calls_duration(_seconds)?_bucket\\",\\n++++++objective_name=\\"Animal+API+SLO+for+Super+Low+Latency\\",\\n++++}[15m])\\n++++#+Attach+the+version+and+commit+labels+from+the+build_info+metric\\n++++*+on+(instance,+job)+group_left(version)+(\\n++++++last_over_time(build_info[5s])\\n++++++or+on+(instance,+job)+up\\n++++)\\n++)\\n)"]}'
      }
    }
  ]
}

{"role":"assistant","content":null,"tool_calls":[{"id":"call_QD5MtNIFsOLBgFP0GiXQdtlS","type":"function","function":{"name":"extract_useful_queries","arguments":"{\"queries\":[\"histogram_quantile(\\n++0.99,\\n++sum+by+(le,+function,+module,+version,+service_name)+(\\n++++rate({\\n++++++__name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n++++++objective_name=\\\"Animal+API+SLO+for+Super+Low+Latency\\\",\\n++++}[15m])\\n++++#+Attach+the+version+and+commit+labels+from+the+build_info+metric\\n++++*+on+(instance,+job)+group_left(version)+(\\n++++++last_over_time(build_info[5s])\\n++++++or+on+(instance,+job)+up\\n++++)\\n++)\\n)\"]}"}}]}
{
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_mD0IKpwuUU99oXM1j51dJaSb",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"queries\": [\"histogram_quantile(\\n++0.99,\\n++sum+by+(le,+function,+module,+version,+service_name)+(\\n++++rate({\\n++++++__name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n++++++objective_name=\\\"Animal+API+SLO+for+Super+Low+Latency\\\",\\n++++}[15m])\\n++++#+Attach+the+version+and+commit+labels+from+the+build_info+metric\\n++++*+on+(instance,+job)+group_left(version)+(\\n++++++last_over_time(build_info[5s])\\n++++++or+on+(instance,+job)+up\\n++++)\\n++)\\n)\\n\"]}"
      }
    }
  ]
}

{
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_HftrBQ9QSnoxFmfBosAOeh5G",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"queries\": [\"histogram_quantile(\\n++0.99,\\n++sum+by+(le,+function,+module,+version,+service_name)+(\\n++++rate({\\n++++++__name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n++++++objective_name=\\\"Animal+API+SLO+for+Super+Low+Latency\\\",\\n++++}[15m])\\n++++#+Attach+the+version+and+commit+labels+from+the+build_info+metric\\n++++*+on+(instance,+job)+group_left(version)+(\\n++++++last_over_time(build_info[5s])\\n++++++or+on+(instance,+job)+up\\n++++)\\n++)\\n)\\n\"]}"
      }
    },
    {
      "id": "call_LMRdoh8IlJm5mwjEHUHRoThb",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"queries\": []}"
      }
    }
  ]
}

{
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_dKSG51rTDUzPxS1w43PSGieO",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"queries\": [\"histogram_quantile(\\n++0.99,\\n++sum+by+(le,+function,+module,+version,+service_name)+(\\n++++rate({\\n++++++__name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n++++++objective_name=\\\"Animal+API+SLO+for+Super+Low+Latency\\\",\\n++++}[15m])\\n++++#+Attach+the+version+and+commit+labels+from+the+build_info+metric\\n++++*+on+(instance,+job)+group_left(version)+(\\n++++++last_over_time(build_info[5s])\\n++++++or+on+(instance,+job)+up\\n++++)\\n++)\\n)\\n\"]}"
      }
    },
    {
      "id": "call_HAuPYZwISsT8oSM17SFLjvFO",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"queries\": []}"
      }
    }
  ]
}

{
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_2YL4J1emyL5pEUqIxTEDXgSq",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"queries\": [\"histogram_quantile(\\n++0.99,\\n++sum+by+(le,+function,+module,+version,+service_name)+(\\n++++rate({\\n++++++__name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n++++++objective_name=\\\"Animal+API+SLO+for+Super+Low+Latency\\\",\\n++++}[15m])\\n++++#+Attach+the+version+and+commit+labels+from+the+build_info+metric\\n++++*+on+(instance,+job)+group_left(version)+(\\n++++++last_over_time(build_info[5s])\\n++++++or+on+(instance,+job)+up\\n++++)\\n++)\\n)\\n\"]}"
      }
    }
  ]
}

{
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_wyhi6k4XeUl4AzP78La9DLki",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"datasource_queries\":[\"histogram_quantile(\\n++0.99,\\n++sum+by+(le,+function,+module,+version,+service_name)+(\\n++++rate({\\n++++++__name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n++++++objective_name=\\\"Animal+API+SLO+for+Super+Low+Latency\\\",\\n++++}[15m])\\n++++#+Attach+the+version+and+commit+labels+from+the+build_info+metric\\n++++*+on+(instance,+job)+group_left(version)+(\\n++++++last_over_time(build_info[5s])\\n++++++or+on+(instance,+job)+up\\n++++)\\n++)\\n)\\n\"]}"
      }
    }
  ]
}

{
  "role": "assistant",
  "content": "{\n  \"message\": \"It seems there are no similar notebooks found that directly relate to the current incident involving slowness on the API service for 'animalbuttons'. Without similar past incidents to reference, we'll need to start our investigation from scratch. Could you provide more details about the incident, such as specific error messages, time frames, or any particular observations you've made? This information will help us tailor our investigation approach effectively.\"\n}"
}

{
  "role": "assistant",
  "content": "{\n  \"message\": \"It seems there are no similar notebooks found that directly relate to the current incident involving slowness on the API service for animalbuttons. Without similar past incidents to reference, we'll need to start our investigation from scratch. Let's proceed by identifying key metrics and logs that can help us diagnose the issue. Could you provide more details about the data sources or specific queries you've already considered or would like to explore?\"\n}"
}

{
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_vCKF02IH83Le1wRccoBYjxRV",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"datasource_queries\":[\"histogram_quantile(\\n  0.99,\\n  sum by (le, function, module, version, service_name) (\\n    rate({\\n      __name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n      objective_name=\\\"Animal API SLO for Super Low Latency\\\",\\n    }[15m])\\n    # Attach the version and commit labels from the build_info metric\\n    * on (instance, job) group_left(version) (\\n      last_over_time(build_info[5s])\\n      or on (instance, job) up\\n    )\\n  )\\n)\\n\"]}"
      }
    }
  ]
}

{
  "role": "assistant",
  "content": null,
  "tool_calls": [
    {
      "id": "call_mtcf6qKUT4vuGgcuDkLc96Nw",
      "type": "function",
      "function": {
        "name": "extract_useful_queries",
        "arguments": "{\"datasource_queries\":[{\"query\":\"histogram_quantile(\\n  0.99,\\n  sum by (le, function, module, version, service_name) (\\n    rate({\\n      __name__=~\\\"function_calls_duration(_seconds)?_bucket\\\",\\n      objective_name=\\\"Animal API SLO for Super Low Latency\\\",\\n    }[15m])\\n    # Attach the version and commit labels from the build_info metric\\n    * on (instance, job) group_left(version) (\\n      last_over_time(build_info[5s])\\n      or on (instance, job) up\\n    )\\n  )\\n)\\n\",\"provider\":\"Prometheus\"}]}"
      }
    }
  ]
}
